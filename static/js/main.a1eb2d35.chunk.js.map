{"version":3,"sources":["Loader.js","utils.js","ColorList.js","ColorCreator.js","ColorPage.js","index.js","App.js"],"names":["className","consonants","vowels","getRandomNumber","cap","Math","floor","random","getRandomItem","arr","length","getRandomConsonant","getRandomBool","getRandomPair","generateRandomColorName","name","generateRandomColor","hue","ColorList","colorData","createColor","map","index","key","style","color","to","id","onClick","ColorCreator","history","useHistory","randomColor","useState","setName","setHue","type","value","onChange","target","min","max","step","push","disabled","ColorPage","useParams","setColor","useEffect","indexNumber","Number","isNaN","backgroundColor","backgroundImage","ReactDOM","render","setColorData","fetch","then","response","json","colors","catch","console","warn","newColor","basename","process","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.a1eb2d35.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Loader.css\";\n\nexport default () => <div className=\"loader\" />;\n","// Helper functions\nconst consonants = [\n  \"b\",\n  \"c\",\n  \"d\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"p\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\"\n];\nconst vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\nconst getRandomNumber = cap => Math.floor(Math.random() * cap);\nconst getRandomItem = arr => arr[getRandomNumber(arr.length)];\nconst getRandomConsonant = () => getRandomItem(consonants);\nconst getRandomVowel = () => getRandomItem(vowels);\nconst getRandomBool = () => Math.random() >= 0.5;\nconst getRandomPair = () => getRandomVowel() + getRandomConsonant();\n\nfunction generateRandomColorName() {\n  let name = Math.random() >= 0.3 ? getRandomConsonant() : getRandomPair();\n  name += getRandomPair();\n  if (getRandomBool()) {\n    name += getRandomPair();\n  }\n  if (getRandomBool()) {\n    name += getRandomPair();\n  }\n  return name;\n}\n\nexport function generateRandomColor() {\n  return {\n    name: generateRandomColorName(),\n    hue: getRandomNumber(359)\n  };\n}\n\nexport function changeSaturation(hsl) {\n  const regexp = /hsl\\(\\s*(\\d+)\\s*,\\s*(\\d+%)\\s*,\\s*(\\d+%)\\)/g;\n  const hslArray = regexp.exec(hsl).slice(1);\n  const randomSaturation = Math.floor(Math.random() * 75 + 25);\n  return `hsl(${hslArray[0]}, ${randomSaturation}%, ${hslArray[2]})`;\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { generateRandomColor } from \"./utils\";\nimport \"./ColorList.css\";\n\nexport default function ColorList({ colorData, createColor }) {\n  const handleClick = () => createColor(generateRandomColor());\n  return (\n    <section>\n      <header>\n        <h1>Colors</h1>\n      </header>\n      <ul>\n        {colorData.map(({ name, hue }, index) => (\n          <li\n            key={`${name}-${hue}-${index}`}\n            style={{ color: `hsl(${hue}, 100%, 50%)` }}\n          >\n            <Link\n              style={{ color: `hsl(${hue}, 100%, 50%)` }}\n              to={`color/${index}`}\n            >\n              {name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <footer>\n        <Link to=\"/new\" className=\"button\" id=\"add-new\">\n          Create\n        </Link>\n        <button onClick={handleClick}>Generate</button>\n      </footer>\n    </section>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { generateRandomColor } from \"./utils\";\nimport \"./ColorCreator.css\";\n\nexport default function ColorCreator({ createColor }) {\n  const history = useHistory();\n  const randomColor = generateRandomColor();\n  const [name, setName] = useState(randomColor.name);\n  const [hue, setHue] = useState(randomColor.hue);\n  const handleNameChange = ({ target }) => setName(target.value);\n  const handleHueChange = ({ target }) => setHue(target.value);\n  function handleClick() {\n    const newColor = {\n      name,\n      hue\n    };\n    createColor(newColor);\n    history.push(\"/\");\n  }\n  return (\n    <section>\n      <header>\n        <h1>Create</h1>\n      </header>\n      <div className=\"form\">\n        <label>\n          Name:\n          <input type=\"text\" value={name} onChange={handleNameChange} />\n        </label>\n        <label>\n          Hue:\n          <input\n            type=\"number\"\n            value={hue}\n            onChange={handleHueChange}\n            min=\"0\"\n            max=\"355\"\n            step=\"5\"\n          />\n        </label>\n      </div>\n      <div className=\"action\">\n        <button onClick={handleClick} disabled={!name.length}>\n          Create new color\n        </button>\n      </div>\n    </section>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport Loader from \"./Loader\";\nimport \"./ColorPage.css\";\n\nexport default function ColorPage({ colorData }) {\n  const history = useHistory();\n  const { index } = useParams();\n  const [color, setColor] = useState(false);\n  useEffect(() => {\n    const indexNumber = Number(index);\n    if (\n      !Number.isNaN(indexNumber) &&\n      indexNumber < colorData.length &&\n      indexNumber >= 0\n    ) {\n      setColor(colorData[index]);\n    } else {\n      history.push(\"/\");\n    }\n  }, [colorData, index, history]);\n  if (!color) return <Loader />;\n  const { name, hue } = color;\n  return (\n    <div\n      className=\"color-page\"\n      style={{\n        backgroundColor: `hsl(${hue}, 100%, 50%)`,\n        backgroundImage: `linear-gradient(hsl(${hue}, 100%, 50%), hsl(${hue}, 40%, 40%))`\n      }}\n    >\n      <h2>{name}</h2>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","import React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport Loader from \"./Loader\";\nimport ColorList from \"./ColorList\";\nimport ColorCreator from \"./ColorCreator\";\nimport ColorPage from \"./ColorPage\";\nimport \"./App.css\";\n\nexport default function App() {\n  const [colorData, setColorData] = useState([]);\n  useEffect(() => {\n    fetch(\"https://davidhartsough.com/ultimate-color-app/colors.json\")\n      .then(response => response.json())\n      .then(({ colors }) => setColorData(colors))\n      .catch(console.warn);\n  }, []);\n  const createColor = newColor => setColorData([...colorData, newColor]);\n  if (!colorData.length) return <Loader />;\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\">\n          <ColorList colorData={colorData} createColor={createColor} />\n        </Route>\n        <Route path=\"/new\">\n          <ColorCreator createColor={createColor} />\n        </Route>\n        <Route path=\"/color/:index\">\n          <ColorPage colorData={colorData} />\n        </Route>\n        <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n"],"sourceRoot":""}